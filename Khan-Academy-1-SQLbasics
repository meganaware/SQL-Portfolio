/*1: SQL basics
*/

/*CHALLENGE: Book list database
*/

/*What are your favorite books? You can make a database table to store them in! In this first step, create a table to store your list of books. It should have columns for id, name, and rating.
*/

/*Now, add three of your favorite books into the table.
*/

CREATE TABLE books (id INTEGER PRIMARY KEY, name TEXT, rating INTEGER);

INSERT INTO books VALUES
(1, 'The Night Circus', 2),
(2, 'Icebreaker', 1),
(3, 'Ugly Love', 3)
;


/*Challenge 2: Box office hits database 
This database contains an incomplete list of box office hits and their release year. 
You're going to get the results back out of the database in different ways! 
 */
 
 /*Challenge 3: To do list stats
Here's a table containing a TODO list with the number of minutes it will take to complete each item. 
Insert another item to your todo list with the estimated minutes it will take.
Select the SUM of minutes it will take to do all of the items on your TODO list.
*/

/*Challenge 4: Design a store
Create your own store! Your store should sell one type of things, like clothing or bikes, whatever you want
store to specialize in. You should have a table for all the items in your store, and at least 5 columns 
for the kind of data you think you'd need to store. You should sell at least 15 items, and use select 
statements to order your items by price and show at least one statistic about the items.
 */
 
/*Challenge 5: Karaoke song selector
We've created a table with songs, and in this challenge, you'll use queries to decide what songs to sing.
*/

/*Challenge 6: Playlist maker
We've created a database of songs and artists, and you'll make playlists 
from them in this challenge. 
*/


/*Challenge 7: Wordiest author
We've created a database of a few popular authors and their books, with word counts 
for each book.
*/

/*Challenge 8: Gradebook
We've created a database to track student grades, with their name, number grade, 
and what percent of activities they've completed. 
*/

/*Challenge 9: Bobbie's hobbies
We've created a database of people and hobbies, and each row in hobbies is related to a row in persons 
via the person_id column. Insert one more row in persons and then one more row in hobbies that is 
related to the newly inserted person.
*/

/*Challenge 10: Customer order
We've created a database for customers and their orders. Note, not all of the customers 
have made orders. 
*/

/*Challenge 11: Sequels
We've created a table with all the 'Harry Potter' movies, with a sequel_id column 
that matches the id of the sequel for each movie.
*/

/*Challenge 12: Friendbook
We've created a database for a friend networking site, with a table storing data on 
each person, a table on each person's hobbies, and a table of friend connections 
between the people.
*/

/*Challenge 13: Dynamic documents
We've created a database for a documents app, with rows for each document with it's 
title, content, and author.
*/

/*Challenge 14: Clothing alterations
We've created a database of clothes, and decided we need a price column. 
Use ALTER to add a 'price' column to the table. 
Then select all the columns in each row to see what your table looks like now.
*/

